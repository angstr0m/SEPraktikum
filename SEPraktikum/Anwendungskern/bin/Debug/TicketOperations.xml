<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TicketOperations</name>
    </assembly>
    <members>
        <member name="T:TicketOperations.Models.Vorstellung">
            <summary>
            Eine Vorstellung repräsentiert eine einzelne Vorführung eines Films in einem bestimmten Kinosaal.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:TicketOperations.Models.Vorstellung.startTime">
            <summary>
            Startzeit des Vorstellung.
            </summary>
        </member>
        <member name="F:TicketOperations.Models.Vorstellung._film">
            <summary>
            Der Film der in der Vorstellung gezeigt wird.
            </summary>
        </member>
        <member name="F:TicketOperations.Models.Vorstellung._kinosaal">
            <summary>
            Der Kinosaal in dem die Vorstellung gezeigt wird.
            </summary>
        </member>
        <member name="F:TicketOperations.Models.Vorstellung.pause">
            <summary>
            Zeigt an, ob es während der Vorstellung eine Pause gibt oder nicht. 
            </summary>
        </member>
        <member name="F:TicketOperations.Models.Vorstellung._kinokarten">
            <summary>
            Die Kinokarten dieser Vorstellung.
            </summary>
        </member>
        <member name="M:TicketOperations.Models.Vorstellung.#ctor(System.DateTime,Cinema.Models.Film,Cinema.Models.Kinosaal,System.Boolean,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:TicketOperations.Models.Vorstellung"/> class.
            </summary>
            <param name="startTime">The start time.</param>
            <param name="_film">The Film.</param>
            <param name="kinosaal">The _kinosaal.</param>
            <param name="pause">if set to <c>true</c> [pause].</param>
            <param name="ticketPrice">The Kinokarte price.</param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Vorstellung.GetNumberOfFreeSeats">
            <summary>
            Gibt die Anzahl der Kinokarten zurück, die weder verkauft noch reserviert sind.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Vorstellung.GetNumberOfBlockedSeats">
            <summary>
            Gibt die Anzahl der Kinokarten zurück, die gekauft oder reserviert wurden.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Vorstellung.GetVerfügbareKinokarten">
            <summary>
            Gibt die Kinokarten dieser Vorstellung zurück, die weder verkauft noch reserviert sind.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Vorstellung.GetReservierteKinokarten">
            <summary>
            Gibt die reservierten Kinokarten zurück.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Vorstellung.GetVerkaufteKinokarten">
            <summary>
            Liefert die verkauften Kinokarten zurück.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Vorstellung.GetKinokarte(System.Int32)">
            <summary>
            Gibt eine bestimmte Kinokarte aus dieser Vorstellung zurück.
            </summary>
            <param name="index">Der Index der gewünschten Kinokarte.</param>
            <returns>Die gewünschte Kinokarte.</returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Vorstellung.GetKinokarte(Cinema.InterfaceMembers.ISitz)">
            <summary>
            Gibt eine bestimmte Kinokarte aus dieser Vorstellung zurück.
            </summary>
            <param name="seat">Die Reihe des Sitzes (A-Z).</param>
            <returns>Die gewünschte Kinokarte.</returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Vorstellung.GetKinokarte(System.Char,System.Int32)">
            <summary>
            Gibt eine bestimmte Kinokarte aus dieser Vorstellung zurück.
            </summary>
            <param name="reihe">Die Reihe des Sitzes der gewünschten Kinokarte (A-Z).</param>
            <param name="nummer">Dir Nummer der gewünschten Kinokarte.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Vorstellung.ReserviereKinokarte(TicketOperations.Models.Kinokarte)">
            <summary>
            Reserviert die angegebene Kinokarte.
            </summary>
            <param name="kinokarte"></param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Vorstellung.ReserviereKinokarte(System.Char,System.Int32)">
            <summary>
            Reserviert die angegebene Kinokarte.
            </summary>
            <param name="row"></param>
            <param name="nr"></param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Vorstellung.VerkaufeKinokarte(TicketOperations.Models.Kinokarte)">
            <summary>
            Verkauft die angegebene Kinokarte.
            </summary>
            <param name="kinokarte"></param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Vorstellung.VerkaufeKinokarte(System.Char,System.Int32)">
            <summary>
            Verkauft die angegebene Kinokarte.
            </summary>
            <param name="row"></param>
            <param name="nr"></param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Vorstellung.KinokarteZurücksetzen(TicketOperations.Models.Kinokarte)">
            <summary>
            Macht den Verkauf und oder die Reservierung einer Kinokarte rückgängig.
            </summary>
            <param name="kinokarte">The Kinokarte to get.</param>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.Models.Vorstellung.StartTime">
            <summary>
            Gibt die Startzeit dieser Vorstellung zurück.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.Models.Vorstellung.Duration">
            <summary>
            Gibt die Spieldauer des zugehörigen Films zurück.
            </summary>
            <value>The duration.</value>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.Models.Vorstellung.Altersfreigabe">
            <summary>
            Gibt die Altersfreigabe das Films zurück.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.Models.Vorstellung.Name">
            <summary>
            Gibt den Namen des Films zurück, der gezeigt wird.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.PublicInterfaceMembers.IPublicFilmprogramm.Shows">
            <summary>
            Gets or sets the list of shows that represent the shows that are shown in the week the movie program is responsible for.
            </summary>
            <value>The shows.</value>
            <remarks></remarks>
            <pre></pre>
        </member>
        <member name="T:TicketOperations.Models.Buchung">
            <summary>
            
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:TicketOperations.Models.Reservierung">
            <summary>
            
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Reservierung.TicketHinzufügen(TicketOperations.Models.Kinokarte,TicketOperations.PublicInterfaceMembers.IKinokarteBlockierungZugangsSchlüssel)">
            <summary>
            Kinokarte der Reservierung hinzufügen
            </summary>
            <param name="kinokarte">Das Kinokarte welches der Reservierung hinzugefügt werden soll.</param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Reservierung.TicketEntfernen(TicketOperations.Models.Kinokarte)">
            <summary>
            Entfernt das übergebene Kinokarte aus dieser Reservierung.
            </summary>
            <param name="kinokarte">Das Kinokarte.</param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Reservierung.Price">
            <summary>
            Gibt den Preis dieser Reservierung zurück.
            </summary>
            <returns></returns>
            <remarks> Der Preis dieser Reservierung ergibt sich hierbei aus der Summe der Preise aller Kinokarten. </remarks>
        </member>
        <member name="M:TicketOperations.Models.Reservierung.ReservierungStornieren">
            <summary>
            Storniert diese Reservierung.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.Models.Reservierung.Reservierungsnummer">
            <summary>
            Gibt die Reservierungsnummer diese Reservierung zurück.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.Models.Reservierung.Vorstellung">
            <summary>
            Gibt die Vorstellung zu der diese Reservierung gehört zurück.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.Models.Reservierung.Kinokarten">
            <summary>
            Gibt die Kinokarten zurück, die zu dieser Vorstellung gehören.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.Models.Reservierung.Kunde">
            <summary>
            Gibt den Kunden zurück, dem diese Registrierung zugeordnet ist.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:TicketOperations.Models.Buchung.isPayed">
            <summary>
            
            </summary>
        </member>
        <member name="M:TicketOperations.Models.Buchung.GetIsPayed">
            <summary>
            Gets the is payed.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Buchung.SetIsPayed(System.Object)">
            <summary>
            Sets the is payed.
            </summary>
            <param name="isPayed">The is payed.</param>
            <remarks></remarks>
        </member>
        <member name="T:TicketOperations.Models.Kinokarte">
            <summary>
            Repräsentiert eine Kinokarte die zu einer Vorstellung gehört.
            </summary>
            <remarks> Eine Kinokarte kann gekauft und oder reserviert werden.
            Ist eine Kinokarte 15 Minuten vor Beginn der Vorstellung reserviert, 
            aber nicht gekauft so wird die Reservierung für diese Karte storniert. </remarks>
        </member>
        <member name="F:TicketOperations.Models.Kinokarte._verkauft">
            <summary>
            Gibt an, ob diese Karte bereits verkauft wurde.
            </summary>
        </member>
        <member name="F:TicketOperations.Models.Kinokarte._reserviert">
            <summary>
            Gibt an ob diese Karte reserviert wurde.
            </summary>
        </member>
        <member name="F:TicketOperations.Models.Kinokarte._rabatt">
            <summary>
            Gibt an ob auf den Kaufpreis dieser Karte 10% Rabatt gewährt werden soll.
            </summary>
        </member>
        <member name="F:TicketOperations.Models.Kinokarte._preis">
            <summary>
            Der Preis der Kinokarte.
            </summary>
        </member>
        <member name="F:TicketOperations.Models.Kinokarte.sitz">
            <summary>
            Der zugehörige Sitz zu dieser Kinokarte.
            </summary>
        </member>
        <member name="F:TicketOperations.Models.Kinokarte.vorstellung">
            <summary>
            Die Vorstellung zu der diese Kinokarte gehört.
            </summary>
        </member>
        <member name="F:TicketOperations.Models.Kinokarte._databaseReservation">
            <summary>
            Entity Manager für den Zugriff auf die Reservierungen.
            </summary>
        </member>
        <member name="M:TicketOperations.Models.Kinokarte.#ctor(System.Single,Cinema.Models.Sitz,TicketOperations.Models.Vorstellung)">
            <summary>
            Initializes a new instance of the <see cref="T:TicketOperations.Models.Kinokarte"/> class.
            </summary>
            <param name="preis"> Der Preis der Kinokarte. </param>
            <param name="sitz"> Der zugehörige Sitz dieser Vorstellung. </param>
            <param name="vorstellung"> Die zugehörige Vorstellung. </param>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.Models.Kinokarte.Reserviert">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:TicketOperations.Models.Kinokarte"/> is Reserviert.
            </summary>
            <value><c>true</c> if Reserviert; otherwise, <c>false</c>.</value>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.Models.Kinokarte.Rabatt">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:TicketOperations.Models.Kinokarte"/> is discounted.
            This is true when it was bought buy a student/pupil and or pensioneer.
            The Rabatt is always 10%.
            </summary>
            <value><c>true</c> if the ticketprice is discounted; otherwise, <c>false</c>.</value>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.Models.Kinokarte.Verkauft">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:TicketOperations.Models.Kinokarte"/> is sold.
            </summary>
            <value><c>true</c> if sold; otherwise, <c>false</c>.</value>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.Models.Kinokarte.Preis">
            <summary>
            Gets the _preis of the kinokarte, taking into account any Rabatt.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.Models.Kinokarte.Sitz">
            <summary>
            Gets the Sitz that belongs to this kinokarte.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.Models.Kinokarte.Vorstellung">
            <summary>
            Gets the vorstellung this kinokarte is for.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:TicketOperations.PublicInterfaceMembers.PublicVorstellung">
            <summary>
            Decorator for the vorstellung object.
            This class is meant for giving vorstellung objects to the outside, while hiding members and methods on the vorstellung-object which should not be seen.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.PublicInterfaceMembers.IPublicVorstellung.GetNumberOfFreeTickets">
            <summary>
            Gets the number of free tickets.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.PublicInterfaceMembers.IPublicVorstellung.GetNumberOfUnavailableTickets">
            <summary>
            Gets the number of tickets that has been sold or reserved.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.PublicInterfaceMembers.IPublicVorstellung.GetAvailableTickets">
            <summary>
            Gets the available tickets.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.PublicInterfaceMembers.IPublicVorstellung.GetReservedTickets">
            <summary>
            Gets the reserved tickets.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.PublicInterfaceMembers.IPublicVorstellung.GetSoldTickets">
            <summary>
            Gets the sold tickets.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.PublicInterfaceMembers.IPublicVorstellung.GetTicket(System.Int32)">
            <summary>
            Gets the ticket at index.
            </summary>
            <param name="index">The index of the wanted ticket.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.PublicInterfaceMembers.IPublicVorstellung.GetTicket(System.Char,System.Int32)">
            <summary>
            Gets the ticket for a specific seat, identified by row and number of the seat.
            </summary>
            <param name="row">The row of the seat (A-Z).</param>
            <param name="nr">The number of the seat.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.PublicInterfaceMembers.IPublicVorstellung.StartTime">
            <summary>
            Gets or sets the start time.
            </summary>
            <value>The start time.</value>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.PublicInterfaceMembers.IPublicVorstellung.Duration">
            <summary>
            Gets the duration of the movie shown.
            </summary>
            <value>The duration.</value>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.PublicInterfaceMembers.IPublicVorstellung.MovieRating">
            <summary>
            Gets the movie rating (parental advisory) of the movie shown.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.PublicInterfaceMembers.IPublicVorstellung.Name">
            <summary>
            Gets the name of the movie that is shown.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.PublicInterfaceMembers.PublicVorstellung.GetNumberOfFreeTickets">
            <summary>
            Gets the number of free tickets.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.PublicInterfaceMembers.PublicVorstellung.GetNumberOfUnavailableTickets">
            <summary>
            Gets the number of tickets that has been sold or reserved.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.PublicInterfaceMembers.IPublicKinokarte.Reserved">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:TicketOperations.Models.Kinokarte"/> is reserved.
            </summary>
            <value><c>true</c> if reserved; otherwise, <c>false</c>.</value>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.PublicInterfaceMembers.IPublicKinokarte.Discount">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:TicketOperations.Models.Kinokarte"/> is discounted.
            This is true when it was bought buy a student/pupil and or pensioneer.
            The discount is always 10%.
            </summary>
            <value><c>true</c> if the ticketprice is discounted; otherwise, <c>false</c>.</value>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.PublicInterfaceMembers.IPublicKinokarte.Sold">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:TicketOperations.Models.Kinokarte"/> is sold.
            </summary>
            <value><c>true</c> if sold; otherwise, <c>false</c>.</value>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.PublicInterfaceMembers.IPublicKinokarte.Price">
            <summary>
            Gets the price of the ticket, taking into account any discount.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.PublicInterfaceMembers.IPublicKinokarte.Sitz">
            <summary>
            Gets the Sitz that belongs to this ticket.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:TicketOperations.PublicInterfaceMembers.IPublicKinokarte.Vorstellung">
            <summary>
            Gets the vorstellung this ticket is for.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:TicketOperations.Models.Filmprogramm">
            <summary>
            Dient der Sammlung aller Vorstellungen für eine Woche.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:TicketOperations.Models.Filmprogramm.startDateTime">
            <summary>
            Datum ab welchem das Filmprogramm für eine Woche gültig ist.
            </summary>
        </member>
        <member name="F:TicketOperations.Models.Filmprogramm._vorstellungen">
            <summary>
            Die Vorstellungen dieses Filmprogramms.
            </summary>
        </member>
        <member name="F:TicketOperations.Models.Filmprogramm.published">
            <summary>
            Zeigt an, ob das Filmprogramm bereits veröffentlicht wurde.
            </summary>
        </member>
        <member name="M:TicketOperations.Models.Filmprogramm.#ctor(System.DateTime,System.Collections.Generic.List{TicketOperations.Models.Vorstellung})">
            <summary>
            Initializes a new instance of the <see cref="T:TicketOperations.Models.Filmprogramm"/> class.
            </summary>
            <param name="startTime">The start time.</param>
            <param name="vorstellungen">The vorstellungen.</param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.Models.Filmprogramm.Veröffentlichen">
            <summary>
            Veröffentlicht das Filmprogramm.
            </summary>
            <remarks>Sobald das Filmprogramm öffentlich ist, kann es von Kunden eingesehen werden.</remarks>
        </member>
        <member name="P:TicketOperations.Models.Filmprogramm.Vorstellungen">
            <summary>
            Gibt die Vorstellungen dieses Filmprogramms zurück.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.Interfaces.IKinokarteReservieren.KinokarteReservieren(TicketOperations.PublicInterfaceMembers.IPublicVorstellung,TicketOperations.PublicInterfaceMembers.ISitzIdentifikator,System.Boolean,System.Int32,TicketOperations.PublicInterfaceMembers.IKinokarteBlockierungZugangsSchlüssel)">
            <summary>
            Reserves the kinokarte identified by seat row and number.
            </summary>
            <param name="vorstellung">The vorstellung.</param>
            <param name="seat"></param>
            <param name="discount"></param>
            <param name="kundennummer"></param>
            <param name="transactionkey"></param>
            <param name="row">The row.</param>
            <param name="number">The number.</param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.Interfaces.IKinokarteReservieren.KinokarteReservieren(TicketOperations.PublicInterfaceMembers.IPublicKinokarte,System.Boolean,System.Int32,TicketOperations.PublicInterfaceMembers.IKinokarteBlockierungZugangsSchlüssel)">
            <summary>
            Reserves the kinokarte.
            </summary>
            <param name="kinokarte">The kinokarte.</param>
            <param name="discount"></param>
            <param name="kundennummer"></param>
            <param name="transactionkey"></param>
            <param name="show">The vorstellung.</param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.Interfaces.IKinokarteReservieren.TicketBlockieren(TicketOperations.PublicInterfaceMembers.IPublicVorstellung,TicketOperations.PublicInterfaceMembers.ISitzIdentifikator)">
            <summary>
            Blocks the kinokarte identified by seat row and number.
            </summary>
            <param name="vorstellung">The vorstellung.</param>
            <param name="row">The row.</param>
            <param name="number">The number.</param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.Interfaces.IKinokarteReservieren.TicketBlockieren(TicketOperations.PublicInterfaceMembers.IPublicKinokarte)">
            <summary>
            Blocks the kinokarte.
            </summary>
            <param name="show">The vorstellung.</param>
            <param name="kinokarte">The kinokarte.</param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.Interfaces.IKinokarteReservieren.TicketBlockierungAufheben(TicketOperations.PublicInterfaceMembers.IPublicVorstellung,TicketOperations.PublicInterfaceMembers.ISitzIdentifikator,TicketOperations.PublicInterfaceMembers.IKinokarteBlockierungZugangsSchlüssel)">
            <summary>
            Unblocks the kinokarte identified by seat row and number.
            </summary>
            <param name="vorstellung">The vorstellung.</param>
            <param name="row">The row.</param>
            <param name="number">The number.</param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.Interfaces.IKinokarteReservieren.TicketBlockierungAufheben(TicketOperations.PublicInterfaceMembers.IPublicKinokarte,TicketOperations.PublicInterfaceMembers.IKinokarteBlockierungZugangsSchlüssel)">
            <summary>
            Unblocks the kinokarte.
            </summary>
            <param name="show">The vorstellung.</param>
            <param name="kinokarte">The kinokarte.</param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.Interfaces.IKinokarteReservieren.ReservierungFürTicketAufheben(TicketOperations.PublicInterfaceMembers.IPublicVorstellung,TicketOperations.PublicInterfaceMembers.ISitzIdentifikator)">
            <summary>
            Resets the kinokarte.
            </summary>
            <param name="movieProgram">The movie program.</param>
            <param name="vorstellung">The vorstellung.</param>
            <param name="row">The row.</param>
            <param name="nr">The nr.</param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.Interfaces.IKinokarteReservieren.ReservierungFürTicketAufheben(TicketOperations.PublicInterfaceMembers.IPublicKinokarte)">
            <summary>
            Returns the Kinokarte.
            </summary>
            <param name="kinokarte">The kinokarte to get.</param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.Interfaces.IKinokarteReservieren.GetWöchentlichesFilmprogramm">
            <summary>
            Gets the movie program for the actual week.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.PublicInterfaceMembers.IBesucherKinokartenReservierung.KinokarteReservieren(TicketOperations.PublicInterfaceMembers.IPublicVorstellung,TicketOperations.PublicInterfaceMembers.ISitzIdentifikator,System.Boolean,TicketOperations.PublicInterfaceMembers.IKinokarteBlockierungZugangsSchlüssel)">
            <summary>
            Reserviert ein Kinokarte für einen Besucher.
            </summary>
            <param name="vorstellung">Die gewünschte Vorstellung.</param>
            <param name="sitz">Der gewünschte Sitz.</param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.PublicInterfaceMembers.IBesucherKinokartenReservierung.KinokarteReservieren(TicketOperations.PublicInterfaceMembers.IPublicKinokarte,System.Boolean,TicketOperations.PublicInterfaceMembers.IKinokarteBlockierungZugangsSchlüssel)">
            <summary>
            Reserviert das TIcket für einen Besucher
            </summary>
            <param name="kinokarte">Das gewünschte Kinokarte.</param>
            <param name="rabatt">Hat den Wert true, wenn Rabatt gegeben werden soll.</param>
            <param name="transaktionsSchlüssel">Der Transaktionsschlüssel um das geblockte Kinokarte freizuschalten.</param>
            <returns> Gibt die Reservierungsnummer für das Kinokarte zurück. </returns>
            <remarks></remarks>
        </member>
        <member name="T:TicketOperations.InternalInterfaceMembers.KinokartenReservieren">
            <summary>
            
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.KinokartenReservieren.#ctor(Users.Interfaces.IBenutzerinformationen)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.KinokartenReservieren.InitializeDatabase">
            <summary>
            Initialisiert alle benötigten Entity Manager.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.KinokartenReservieren.KinokarteReservieren(TicketOperations.PublicInterfaceMembers.IPublicVorstellung,TicketOperations.PublicInterfaceMembers.ISitzIdentifikator,System.Boolean,System.Int32,TicketOperations.PublicInterfaceMembers.IKinokarteBlockierungZugangsSchlüssel)">
            <summary>
            Reserviert ein Kinokarte.
            </summary>
            <param name="vorstellung">Die gewünschte Vorstellung.</param>
            <param name="seat">Der gewünschte Sitzplatz.</param>
            <param name="discount">Soll ein Rabatt auf den Preis der Kinokarte gewährt werden?</param>
            <param name="kundennummer"></param>
            <param name="key">Der TransaktionsSchlüssel der für das entsperren des Kinokarten gebraucht wird.</param>
            <returns> Die Reservationsnummer des reservierten Kinokarten. </returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.KinokartenReservieren.KinokarteReservieren(TicketOperations.PublicInterfaceMembers.IPublicKinokarte,System.Boolean,System.Int32,TicketOperations.PublicInterfaceMembers.IKinokarteBlockierungZugangsSchlüssel)">
            <summary>
            Reserviert ein Kinokarte für einen Kunden.
            </summary>
            <param name="kinokarte">Das Kinokarte welches reserviert werden soll.</param>
            <param name="discount">Soll ein Rabatt auf die Karten gegeben werden?</param>
            <param name="kundennummer"></param>
            <param name="key">Der TransaktionsSchlüssel der für das entsperren des Kinokarten gebraucht wird.</param>
            <returns> Die Reservationsnummer des reservierten Kinokarten. </returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.KinokartenReservieren.ReservierungFürTicketAufheben(TicketOperations.PublicInterfaceMembers.IPublicVorstellung,TicketOperations.PublicInterfaceMembers.ISitzIdentifikator)">
            <summary>
            Entfernt das angegebene Kinokarte aus der zugeordneten Reservierung und gibt es wieder frei.
            </summary>
            <param name="vorstellung">Die gewünschte Vorstellung.</param>
            <param name="seat">Der gewünschte Sitzplatz.</param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.KinokartenReservieren.TicketBlockieren(TicketOperations.PublicInterfaceMembers.IPublicVorstellung,TicketOperations.PublicInterfaceMembers.ISitzIdentifikator)">
            <summary>
            Blockiert das gewünschte Kinokarte, und gibt den Zugangsschlüssel für die Aufhebung der Blockierung zurück.
            </summary>
            <param name="vorstellung">Die gewünschte Vorstellung.</param>
            <param name="seat">Der gewünschte Sitzplatz.</param>
            <returns> Schlüsselobjekt zum entblockieren des Kinokarten. </returns>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.KinokartenReservieren.TicketBlockierungAufheben(TicketOperations.PublicInterfaceMembers.IPublicVorstellung,TicketOperations.PublicInterfaceMembers.ISitzIdentifikator,TicketOperations.PublicInterfaceMembers.IKinokarteBlockierungZugangsSchlüssel)">
            <summary>
            Hebt die Blockierung des Kinokarten mit Hilfe des übergebenen Schlüssels auf.
            </summary>
            <param name="vorstellung">Die gewünschte Vorstellung.</param>
            <param name="seat">Der gewünschte Sitzplatz.</param>
            <param name="key">Zugangsschlüssel der zur Aufhebung der Blockade benötigt wird.</param>
            <remarks></remarks>
        </member>
        <member name="M:TicketOperations.InternalInterfaceMembers.KinokartenReservieren.GetWöchentlichesFilmprogramm">
            <summary>
            Liefert das derzeit aktuelle Filmprogramm.
            </summary>
            <returns> Das Filmprogramm für diese Woche. </returns>
            <remarks></remarks>
        </member>
    </members>
</doc>
