<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Database</name>
    </assembly>
    <members>
        <member name="T:Database.Models.DatabaseSimulation">
            <summary>
            
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Database.Models.DatabaseSimulation.instance">
            <summary>
            
            </summary>
        </member>
        <member name="F:Database.Models.DatabaseSimulation.entityDict">
            <summary>
            
            </summary>
        </member>
        <member name="M:Database.Models.DatabaseSimulation.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Database.Models.DatabaseSimulation"/> class from being created.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Database.Models.DatabaseSimulation.AddValueToDatabase``1(``0)">
            <summary>
            Adds the value to database.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The value.</param>
            <remarks></remarks>
        </member>
        <member name="M:Database.Models.DatabaseSimulation.RemoveValueFromDatabase``1(``0)">
            <summary>
            Removes the value from database.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The value.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Database.Models.DatabaseSimulation.GetValuesFromDatabaseForType(System.Type)">
            <summary>
            Gets the type of the values from database for.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Database.Models.DatabaseSimulation.Instance">
            <summary>
            Gets the instance.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Database.Models.EntityManager`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <remarks></remarks>
        </member>
        <member name="M:Database.Models.EntityManager`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Database.Models.EntityManager`1"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Database.Models.EntityManager`1.GetFreeIdentifier">
            <summary>
            Searches for a free identifier and returns it.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Database.Models.EntityManager`1.AddElement(`0)">
            <summary>
            Adds the element.
            </summary>
            <param name="elem">The elem.</param>
            <remarks></remarks>
        </member>
        <member name="M:Database.Models.EntityManager`1.RemoveElement(`0)">
            <summary>
            Removes the element.
            </summary>
            <param name="elem">The elem.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Database.Models.EntityManager`1.GetElements">
            <summary>
            Gets the elements.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Database.Models.EntityManager`1.AddObserver(Base.Interfaces.Observer)">
            <summary>
            Adds the observer.
            </summary>
            <param name="observer">The observer.</param>
            <remarks></remarks>
        </member>
        <member name="M:Database.Models.EntityManager`1.NotifyObservers">
            <summary>
            Notifies the observers.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Database.Models.EntityManager`1.RemoveObserver(Base.Interfaces.Observer)">
            <summary>
            Removes the observer.
            </summary>
            <param name="observer">The observer.</param>
            <remarks></remarks>
        </member>
    </members>
</doc>
